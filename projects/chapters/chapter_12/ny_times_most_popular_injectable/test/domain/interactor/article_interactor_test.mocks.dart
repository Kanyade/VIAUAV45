// Mocks generated by Mockito 5.3.2 from annotations
// in ny_times_most_popular/test/domain/interactor/article_interactor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ny_times_most_popular/data/disk/article_disk_data_source.dart'
    as _i2;
import 'package:ny_times_most_popular/data/network/article_network_data_source.dart'
    as _i5;
import 'package:ny_times_most_popular/domain/model/article.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ArticleDiskDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDiskDataSource extends _i1.Mock
    implements _i2.ArticleDiskDataSource {
  MockArticleDiskDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Article>?> getAllArticles() => (super.noSuchMethod(
        Invocation.method(
          #getAllArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>?>.value(),
      ) as _i3.Future<List<_i4.Article>?>);
  @override
  _i3.Future<_i4.Article?> getArticle(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getArticle,
          [id],
        ),
        returnValue: _i3.Future<_i4.Article?>.value(),
      ) as _i3.Future<_i4.Article?>);
  @override
  _i3.Future<void> saveArticles(List<_i4.Article>? articles) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveArticles,
          [articles],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ArticleNetworkDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleNetworkDataSource extends _i1.Mock
    implements _i5.ArticleNetworkDataSource {
  MockArticleNetworkDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Article>?> getArticles() => (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>?>.value(),
      ) as _i3.Future<List<_i4.Article>?>);
}
